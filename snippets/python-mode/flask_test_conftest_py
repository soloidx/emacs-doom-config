# -*- mode: snippet -*-
# name: flask_test_conftest_py
# uuid: flask_test_conftest_py
# expand-env: ((yas/indent-line 'fixed))
# --

# pylint: disable=redefined-outer-name,unused-argument,invalid-name
import os
import tempfile

import pytest  # type: ignore
from flask import Flask

# import your test router here
from ${1:app} import ${2:routing}
from ${models} import db as _db


@pytest.fixture
def app():
    db_file, db_filename = tempfile.mkstemp()

    app = Flask(__name__)
    app.config["TESTING"] = True
    app.config["SQLALCHEMY_DATABASE_URI"] = f"sqlite:///{db_filename}"
    app.config["SQLALCHEMY_TRACK_MODIFICATIONS"] = False
    # insert the blueprint into an app so it can be testable
    app.register_blueprint(${2}.blueprint, url_prefix="")
    yield app

    os.close(db_file)
    os.unlink(db_filename)


@pytest.fixture
def client(app):
    with app.test_client() as _client:
        with app.app_context():
            yield _client


@pytest.fixture
def db(app):
    _db.init_app(app)
    _db.create_all()
    yield _db
    _db.session.close()  # pylint: disable=no-member
    _db.drop_all()